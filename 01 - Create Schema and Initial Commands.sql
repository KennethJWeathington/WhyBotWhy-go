DROP TABLE IF EXISTS counter CASCADE;
DROP TABLE IF EXISTS counter_by_user CASCADE;
DROP TABLE IF EXISTS command_text_type CASCADE;
DROP TABLE IF EXISTS command_text CASCADE;
DROP TABLE IF EXISTS command_type CASCADE;
DROP TABLE IF EXISTS command CASCADE;
DROP TABLE IF EXISTS command_command_text CASCADE;

CREATE TABLE counter (
  id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  name VARCHAR NOT NULL,
  count INT NOT NULL DEFAULT 0
);

CREATE TABLE counter_by_user (
  id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  counter_id INT NOT NULL,
  user_name VARCHAR NOT NULL,
  CONSTRAINT fk_counter FOREIGN KEY(counter_id) REFERENCES counter(id)
);

CREATE TABLE command_text_type (
  id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  name VARCHAR NOT NULL
);

CREATE TABLE command_text (
  id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  text VARCHAR NOT NULL,
  custom_text_query VARCHAR,
  command_text_type_id INT,
  needs_stream_info BOOLEAN DEFAULT FALSE,
  needs_user_info BOOLEAN DEFAULT FALSE,
  needs_counter_info BOOLEAN DEFAULT FALSE,
  CONSTRAINT fk_command_text_type FOREIGN KEY(command_text_type_id) REFERENCES command_text_type(id)
);

CREATE TABLE command_type (
  id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  name VARCHAR NOT NULL
);

CREATE TABLE command (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  	name VARCHAR NOT NULL UNIQUE,
  	command_type_id INT NOT NULL,
  	command_text_id INT,
  	counter_id INT,
  	is_moderator_only BOOLEAN DEFAULT FALSE
);

CREATE TABLE command_command_text (
  command_id INT NOT NULL,
  command_text_id INT NOT NULL,
  PRIMARY KEY(command_id, command_text_id),
  CONSTRAINT fk_command FOREIGN KEY(command_id) REFERENCES command(id),
  CONSTRAINT fk_command_text FOREIGN KEY(command_text_id) REFERENCES command_text(id)
);

INSERT INTO command_type(name)
VALUES('text'), --1
('increment_count'), --2
('increment_count_by_user'), --3
('set_count'), --4
('add_text_command'), --5
('remove_text_command'); --6

INSERT INTO counter(name)
VALUES('deaths'), --1
('boops'); --2

INSERT INTO command_text_type(name)
VALUES('success'), --1
('failure'), --2
('header'), --3
('body'); --4

INSERT INTO command_text(text, custom_text_query, command_text_type_id, needs_stream_info, needs_user_info, needs_counter_info)
VALUES('WHY {{.chatUserName}} WHY!?', NULL, NULL, FALSE, TRUE, FALSE), --1
('{{.streamName}} has died embarrassingly {{.deaths}} times on stream!', NULL, NULL, TRUE, FALSE, TRUE),
('Deaths set to {{.deaths}}.', NULL, NULL, FALSE, FALSE, TRUE), --3
('{{.chatUserName}} booped the snoot! The snoot has been booped {{.boops}} times.', NULL, NULL, FALSE, TRUE, TRUE), --4
('Top Boopers:', NULL, 3, FALSE, FALSE, FALSE), --5
('{{.row}}. @{{.chatUserName}}: ${{countByUser}} boops,', NULL, 4, FALSE, FALSE, TRUE), --6
('Command added.', NULL, 1, FALSE, FALSE, FALSE), --7
('Command already exists.', NULL, 2, FALSE, FALSE, FALSE), --8
('Command removed.', NULL, 1, FALSE, FALSE, FALSE), --9
('Command not found.', NULL, 2, FALSE, FALSE, FALSE), --10
('The rules are THERE ARE NO RULES!', NULL, NULL, FALSE, FALSE, FALSE), --11
('The current commands are: {{.commands}}', 'SELECT ''test'' AS commands', NULL, FALSE, FALSE, FALSE); --12

INSERT INTO command(name, command_type_id, counter_id, is_moderator_only)
VALUES('whyme', 1, NULL, FALSE), --1
('death', 2, 1, FALSE), --2
('setdeaths', 4, 1, TRUE), --3
('boop', 3, 2, FALSE), --4
('boopboard', 1, 2, FALSE), --5
('addcommand', 5, NULL, TRUE), --6
('removecommand', 6, NULL, TRUE), --7
('rules', 1, NULL, FALSE), --8
('commands', 1, NULL, FALSE); --9

INSERT INTO command_command_text(command_id, command_text_id)
VALUES(1, 1),
(2, 2),
(3, 3),
(4, 4),
(5, 5),
(5, 6),
(6, 7),
(6, 8),
(7, 9),
(7, 10),
(8, 11),
(9, 12);


/*
SELECT c.name, c.is_moderator_only, cty.name, ct.text, ct.custom_text_query, ctt.name, co.name
FROM command c
INNER JOIN command_type cty ON c.command_type_id = cty.id
INNER JOIN command_command_text cct ON c.id = cct.command_id
INNER JOIN command_text ct ON ct.id = cct.command_text_id
LEFT JOIN command_text_type ctt ON ct.command_text_type_id = ctt.id
LEFT JOIN counter co ON c.counter_id = co.id;
*/